# 우현이는 어린 시절, 지구 외의 다른 행성에서도 인류들이 살아갈 수 있는 미래가 오리라 믿었다. 그리고 그가 지구라는 세상에 발을 내려 놓은 지 23년이 지난 지금, 세계 최연소 ASNA 우주 비행사가 되어 새로운 세계에 발을 내려 놓는 영광의 순간을 기다리고 있다.

# 그가 탑승하게 될 우주선은 Alpha Centauri라는 새로운 인류의 보금자리를 개척하기 위한 대규모 생활 유지 시스템을 탑재하고 있기 때문에, 그 크기와 질량이 엄청난 이유로 최신기술력을 총 동원하여 개발한 공간이동 장치를 탑재하였다. 하지만 이 공간이동 장치는 이동 거리를 급격하게 늘릴 경우 기계에 심각한 결함이 발생하는 단점이 있어서, 이전 작동시기에 k광년을 이동하였을 때는 k-1 , k 혹은 k+1 광년만을 다시 이동할 수 있다. 예를 들어, 이 장치를 처음 작동시킬 경우 -1 , 0 , 1 광년을 이론상 이동할 수 있으나 사실상 음수 혹은 0 거리만큼의 이동은 의미가 없으므로 1 광년을 이동할 수 있으며, 그 다음에는 0 , 1 , 2 광년을 이동할 수 있는 것이다. ( 여기서 다시 2광년을 이동한다면 다음 시기엔 1, 2, 3 광년을 이동할 수 있다. )


# 김우현은 공간이동 장치 작동시의 에너지 소모가 크다는 점을 잘 알고 있기 때문에 x지점에서 y지점을 향해 최소한의 작동 횟수로 이동하려 한다. 하지만 y지점에 도착해서도 공간 이동장치의 안전성을 위하여 y지점에 도착하기 바로 직전의 이동거리는 반드시 1광년으로 하려 한다.

# 김우현을 위해 x지점부터 정확히 y지점으로 이동하는데 필요한 공간 이동 장치 작동 횟수의 최솟값을 구하는 프로그램을 작성하라.

T = int(input())
for _ in range(T):
    x, y = map(int, input().split())
    distance = y - x
    num = 0
    while True:
        if distance <= num * (num + 1):
            break
        num += 1
    if distance <= num**2:
        print(num * 2 - 1)
    else:
        print(num * 2)

import sys

T = int(sys.stdin.readline())
for _ in range(T):
    x, y = map(int, sys.stdin.readline().split())
    distance = y - x
    number = 0  # 블록 개수
    while True:
        if distance <= number * (number + 1):  # 거리가 블록수보다 작으면 탈출해서 개수세기로 넘어감
            break
        number += 1  # 거리가 블록보다 크면 다음블록으로 넘어감
    if distance <= number**2:  # 거리가 제곱블록보다 작으면
        print(number * 2 - 1)  # 홀수 출력
    else:
        print(number * 2)  # 아니면 짝수 출력


# 1          1 1**2
# 11         2 1*2 1블록
# 111        3           2제곱블록
# 121          2**2
# 1211       4           2짝수블록
# 1221         2*3 2블록
# 12211      5
# 12221
# 12321        3**2
# 123211     6
# 123221
# 123321       3*4 3블록
# 1233211    7
# 1233221
# 1233321
# 1234321      4**2

# 4*5
